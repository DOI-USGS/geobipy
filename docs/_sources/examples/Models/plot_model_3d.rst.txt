
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/Models/plot_model_3d.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_Models_plot_model_3d.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_Models_plot_model_3d.py:


3D Rectilinear Model
--------------------
This 3D rectilinear model defines a grid with straight cell boundaries.

.. GENERATED FROM PYTHON SOURCE LINES 9-24

.. code-block:: Python

    from geobipy import StatArray
    from geobipy import RectilinearMesh3D
    from geobipy import Model
    import matplotlib.pyplot as plt
    import numpy as np
    import h5py


    """
    3D Rectilinear Mesh
    -------------------
    This 3D rectilinear mesh defines a grid with straight cell boundaries.

    """





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    '\n3D Rectilinear Mesh\n-------------------\nThis 3D rectilinear mesh defines a grid with straight cell boundaries.\n\n'



.. GENERATED FROM PYTHON SOURCE LINES 25-33

.. code-block:: Python

    from geobipy import StatArray
    from geobipy import RectilinearMesh3D
    from geobipy import Model
    import matplotlib.pyplot as plt
    import numpy as np
    import h5py









.. GENERATED FROM PYTHON SOURCE LINES 34-35

Specify some cell centres in x and y

.. GENERATED FROM PYTHON SOURCE LINES 35-60

.. code-block:: Python

    x = StatArray(np.arange(10.0), 'Easting', 'm')
    y = StatArray(np.arange(15.0), 'Northing', 'm')
    z = StatArray(np.arange(20.0), 'Depth', 'm')

    mesh = RectilinearMesh3D(x_edges=x, y_edges=y, z_edges=z)

    xx, yy = np.meshgrid(mesh.y.centres, mesh.x.centres)
    values = StatArray(np.sin(np.sqrt(xx ** 2.0 + yy ** 2.0)), "Height")
    values = np.repeat(values[:, :, None], mesh.z.nCells, 2)

    model = Model(mesh=mesh, values=values)

    model1 = model[:5, :5, :5]
    model2 = model[:, :, 5]
    model3 = model[:, 5, :]
    model4 = model[5, :, :]

    plt.figure()
    plt.subplot(231)
    model2.pcolor()
    plt.subplot(232)
    model3.pcolor()
    plt.subplot(233)
    model4.pcolor()




.. image-sg:: /examples/Models/images/sphx_glr_plot_model_3d_001.png
   :alt: plot model 3d
   :srcset: /examples/Models/images/sphx_glr_plot_model_3d_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    (<Axes: xlabel='Northing (m)', ylabel='Depth (m)'>, <matplotlib.collections.QuadMesh object at 0x140fcaea0>, <matplotlib.colorbar.Colorbar object at 0x140ffa210>)



.. GENERATED FROM PYTHON SOURCE LINES 61-72

.. code-block:: Python

    model2 = model[:, 5, 5]
    model3 = model[5, :, 5]
    model4 = model[5, 5, :]

    plt.subplot(234)
    model2.pcolor()
    plt.subplot(235)
    model3.pcolor()
    plt.subplot(236)
    model4.pcolor()




.. image-sg:: /examples/Models/images/sphx_glr_plot_model_3d_002.png
   :alt: plot model 3d
   :srcset: /examples/Models/images/sphx_glr_plot_model_3d_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <Axes: xlabel='Depth (m)'>



.. GENERATED FROM PYTHON SOURCE LINES 73-101

.. code-block:: Python

    with h5py.File('model3d.h5', 'w') as f:
        model.createHdf(f, 'test')
        model.writeHdf(f, 'test')

    with h5py.File('model3d.h5', 'r') as f:
        model2 = Model.fromHdf(f['test'])

    model.pyvista_mesh().save('model3d.vtk')


    xx, yy = np.meshgrid(mesh.y.centres, mesh.x.centres)
    z_re = StatArray(np.sin(np.sqrt(xx ** 2.0 + yy ** 2.0)), "z_re")
    mesh = RectilinearMesh3D(x_edges=x, y_edges=y, z_edges=z, z_relative_to=z_re)
    model = Model(mesh=mesh, values=values)

    model1 = model[:5, :5, :5]
    model2 = model[:, :, 5]
    model3 = model[:, 5, :]
    model4 = model[5, :, :]

    plt.figure()
    plt.subplot(231)
    model2.pcolor()
    plt.subplot(232)
    model3.pcolor()
    plt.subplot(233)
    model4.pcolor()




.. image-sg:: /examples/Models/images/sphx_glr_plot_model_3d_003.png
   :alt: plot model 3d
   :srcset: /examples/Models/images/sphx_glr_plot_model_3d_003.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    (<Axes: xlabel='Northing (m)', ylabel='z_re (m)'>, <matplotlib.collections.QuadMesh object at 0x15741b740>, <matplotlib.colorbar.Colorbar object at 0x157464a70>)



.. GENERATED FROM PYTHON SOURCE LINES 102-103

We can plot the mesh in 3D!

.. GENERATED FROM PYTHON SOURCE LINES 103-105

.. code-block:: Python

    pv = model.pyvista_plotter()








.. GENERATED FROM PYTHON SOURCE LINES 106-107

We can plot the mesh in 3D!

.. GENERATED FROM PYTHON SOURCE LINES 107-127

.. code-block:: Python

    model.pyvista_mesh().save('model3d_re1.vtk')


    x_re = StatArray(np.sin(np.repeat(mesh.y.centres[:, None], mesh.z.nCells, 1)), "x_re")
    mesh = RectilinearMesh3D(x_edges=x, x_relative_to=x_re, y_edges=y, z_edges=z, z_relative_to=z_re)
    model = Model(mesh=mesh, values=values)

    model1 = model[:5, :5, :5]
    model2 = model[:, :, 5]
    model3 = model[:, 5, :]
    model4 = model[5, :, :]

    plt.figure()
    plt.subplot(231)
    model2.pcolor()
    plt.subplot(232)
    model3.pcolor()
    plt.subplot(233)
    model4.pcolor()




.. image-sg:: /examples/Models/images/sphx_glr_plot_model_3d_004.png
   :alt: plot model 3d
   :srcset: /examples/Models/images/sphx_glr_plot_model_3d_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    (<Axes: xlabel='Northing (m)', ylabel='z_re (m)'>, <matplotlib.collections.QuadMesh object at 0x1593edc40>, <matplotlib.colorbar.Colorbar object at 0x15941b050>)



.. GENERATED FROM PYTHON SOURCE LINES 128-129

We can plot the mesh in 3D!

.. GENERATED FROM PYTHON SOURCE LINES 129-131

.. code-block:: Python

    pv = model.pyvista_plotter()








.. GENERATED FROM PYTHON SOURCE LINES 132-133

We can plot the mesh in 3D!

.. GENERATED FROM PYTHON SOURCE LINES 133-155

.. code-block:: Python

    model.pyvista_mesh().save('model3d_re2.vtk')


    xx, yy = np.meshgrid(mesh.z.centres, mesh.x.centres)
    y_re = StatArray(np.sin(np.sqrt(xx ** 2.0 + yy ** 2.0)), "y_re")

    mesh = RectilinearMesh3D(x_edges=x, x_relative_to=x_re, y_edges=y, y_relative_to=y_re, z_edges=z, z_relative_to=z_re)
    model = Model(mesh=mesh, values=values)

    model1 = model[:5, :5, :5]
    model2 = model[:, :, 5]
    model3 = model[:, 5, :]
    model4 = model[5, :, :]

    plt.figure()
    plt.subplot(231)
    model2.pcolor()
    plt.subplot(232)
    model3.pcolor()
    plt.subplot(233)
    model4.pcolor()




.. image-sg:: /examples/Models/images/sphx_glr_plot_model_3d_005.png
   :alt: plot model 3d
   :srcset: /examples/Models/images/sphx_glr_plot_model_3d_005.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    (<Axes: xlabel='y_re (m)', ylabel='z_re (m)'>, <matplotlib.collections.QuadMesh object at 0x1594800e0>, <matplotlib.colorbar.Colorbar object at 0x1594b0140>)



.. GENERATED FROM PYTHON SOURCE LINES 156-157

We can plot the mesh in 3D!

.. GENERATED FROM PYTHON SOURCE LINES 157-159

.. code-block:: Python

    pv = model.pyvista_plotter()








.. GENERATED FROM PYTHON SOURCE LINES 160-161

We can plot the mesh in 3D!

.. GENERATED FROM PYTHON SOURCE LINES 161-172

.. code-block:: Python

    model.pyvista_mesh().save('model3d_re3.vtk')

    # with h5py.File('mesh3d.h5', 'w') as f:
    #     mesh.toHdf(f, 'test')

    # with h5py.File('mesh3d.h5', 'r') as f:
    #     mesh2 = RectilinearMesh3D.fromHdf(f['test'])

    # mesh2.pyvista_mesh().save('mesh3d_read.vtk')

    plt.show()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 2.234 seconds)


.. _sphx_glr_download_examples_Models_plot_model_3d.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_model_3d.ipynb <plot_model_3d.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_model_3d.py <plot_model_3d.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_model_3d.zip <plot_model_3d.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
