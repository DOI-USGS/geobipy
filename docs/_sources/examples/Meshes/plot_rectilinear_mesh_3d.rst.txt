
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/Meshes/plot_rectilinear_mesh_3d.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_Meshes_plot_rectilinear_mesh_3d.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_Meshes_plot_rectilinear_mesh_3d.py:


3D Rectilinear Mesh
-------------------
This 3D rectilinear mesh defines a grid with straight cell boundaries.

.. GENERATED FROM PYTHON SOURCE LINES 9-16

.. code-block:: Python

    from geobipy import StatArray
    from geobipy import RectilinearMesh3D
    import matplotlib.pyplot as plt
    import numpy as np
    import h5py









.. GENERATED FROM PYTHON SOURCE LINES 17-18

Specify some cell centres in x and y

.. GENERATED FROM PYTHON SOURCE LINES 18-37

.. code-block:: Python

    x = StatArray(np.arange(10.0), 'Easting', 'm')
    y = StatArray(np.arange(15.0), 'Northing', 'm')
    z = StatArray(np.arange(20.0), 'Depth', 'm')

    rm = RectilinearMesh3D(x_edges=x, y_edges=y, z_edges=z)

    rm1 = rm[:5, :5, :5]
    rm2 = rm[:, :, 5]
    rm3 = rm[:, 5, :]
    rm4 = rm[5, :, :]

    plt.figure()
    plt.subplot(231)
    rm2.plot_grid()
    plt.subplot(232)
    rm3.plot_grid()
    plt.subplot(233)
    rm4.plot_grid()




.. image-sg:: /examples/Meshes/images/sphx_glr_plot_rectilinear_mesh_3d_001.png
   :alt: plot rectilinear mesh 3d
   :srcset: /examples/Meshes/images/sphx_glr_plot_rectilinear_mesh_3d_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 38-49

.. code-block:: Python

    rm2 = rm[:, 5, 5]
    rm3 = rm[5, :, 5]
    rm4 = rm[5, 5, :]

    plt.subplot(234)
    rm2.plot_grid()
    plt.subplot(235)
    rm3.plot_grid()
    plt.subplot(236)
    rm4.plot_grid()




.. image-sg:: /examples/Meshes/images/sphx_glr_plot_rectilinear_mesh_3d_002.png
   :alt: plot rectilinear mesh 3d
   :srcset: /examples/Meshes/images/sphx_glr_plot_rectilinear_mesh_3d_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 50-77

.. code-block:: Python

    with h5py.File('rm3d.h5', 'w') as f:
        rm.createHdf(f, 'test')
        rm.writeHdf(f, 'test')

    with h5py.File('rm3d.h5', 'r') as f:
        rm2 = RectilinearMesh3D.fromHdf(f['test'])

    rm.pyvista_mesh().save('rm3d.vtk')


    xx, yy = np.meshgrid(rm.y.centres, rm.x.centres)
    z_re = StatArray(np.sin(np.sqrt(xx ** 2.0 + yy ** 2.0)), "z_re")
    rm = RectilinearMesh3D(x_edges=x, y_edges=y, z_edges=z, z_relative_to=z_re)

    rm1 = rm[:5, :5, :5]
    rm2 = rm[:, :, 5]
    rm3 = rm[:, 5, :]
    rm4 = rm[5, :, :]

    plt.figure()
    plt.subplot(231)
    rm2.plot_grid()
    plt.subplot(232)
    rm3.plot_grid()
    plt.subplot(233)
    rm4.plot_grid()




.. image-sg:: /examples/Meshes/images/sphx_glr_plot_rectilinear_mesh_3d_003.png
   :alt: plot rectilinear mesh 3d
   :srcset: /examples/Meshes/images/sphx_glr_plot_rectilinear_mesh_3d_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 78-79

We can plot the mesh in 3D!

.. GENERATED FROM PYTHON SOURCE LINES 79-81

.. code-block:: Python

    pv = rm.pyvista_plotter()








.. GENERATED FROM PYTHON SOURCE LINES 82-83

We can plot the mesh in 3D!

.. GENERATED FROM PYTHON SOURCE LINES 83-104

.. code-block:: Python

    mesh = rm.pyvista_mesh().save('rm3d_re1.vtk')

    x_re = StatArray(np.sin(np.repeat(rm.y.centres[:, None], rm.z.nCells, 1)), "x_re")

    xx, yy = np.meshgrid(rm.y.centres, rm.x.centres)
    z_re = StatArray(np.sin(np.sqrt(xx ** 2.0 + yy ** 2.0)), "z_re")
    rm = RectilinearMesh3D(x_edges=x, x_relative_to=x_re, y_edges=y, z_edges=z, z_relative_to=z_re)

    rm1 = rm[:5, :5, :5]
    rm2 = rm[:, :, 5]
    rm3 = rm[:, 5, :]
    rm4 = rm[5, :, :]

    plt.figure()
    plt.subplot(231)
    rm2.plot_grid()
    plt.subplot(232)
    rm3.plot_grid()
    plt.subplot(233)
    rm4.plot_grid()




.. image-sg:: /examples/Meshes/images/sphx_glr_plot_rectilinear_mesh_3d_004.png
   :alt: plot rectilinear mesh 3d
   :srcset: /examples/Meshes/images/sphx_glr_plot_rectilinear_mesh_3d_004.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 105-106

We can plot the mesh in 3D!

.. GENERATED FROM PYTHON SOURCE LINES 106-108

.. code-block:: Python

    pv = rm.pyvista_plotter()








.. GENERATED FROM PYTHON SOURCE LINES 109-110

We can plot the mesh in 3D!

.. GENERATED FROM PYTHON SOURCE LINES 110-136

.. code-block:: Python

    mesh = rm.pyvista_mesh().save('rm3d_re2.vtk')


    xx, yy = np.meshgrid(rm.z.centres, rm.y.centres)
    x_re = StatArray(np.sin(np.sqrt(xx ** 2.0 + yy ** 2.0)), "x_re")

    xx, yy = np.meshgrid(rm.z.centres, rm.x.centres)
    y_re = StatArray(np.sin(np.sqrt(xx ** 2.0 + yy ** 2.0)), "y_re")

    xx, yy = np.meshgrid(rm.y.centres, rm.x.centres)
    z_re = StatArray(np.sin(np.sqrt(xx ** 2.0 + yy ** 2.0)), "z_re")
    rm = RectilinearMesh3D(x_edges=x, x_relative_to=x_re, y_edges=y, y_relative_to=y_re, z_edges=z, z_relative_to=z_re)

    rm1 = rm[:5, :5, :5]
    rm2 = rm[:, :, 5]
    rm3 = rm[:, 5, :]
    rm4 = rm[5, :, :]

    plt.figure()
    plt.subplot(231)
    rm2.plot_grid()
    plt.subplot(232)
    rm3.plot_grid()
    plt.subplot(233)
    rm4.plot_grid()




.. image-sg:: /examples/Meshes/images/sphx_glr_plot_rectilinear_mesh_3d_005.png
   :alt: plot rectilinear mesh 3d
   :srcset: /examples/Meshes/images/sphx_glr_plot_rectilinear_mesh_3d_005.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 137-138

We can plot the mesh in 3D!

.. GENERATED FROM PYTHON SOURCE LINES 138-140

.. code-block:: Python

    pv = rm.pyvista_plotter()








.. GENERATED FROM PYTHON SOURCE LINES 141-142

We can plot the mesh in 3D!

.. GENERATED FROM PYTHON SOURCE LINES 142-153

.. code-block:: Python

    mesh = rm.pyvista_mesh().save('rm3d_re3.vtk')

    with h5py.File('rm3d.h5', 'w') as f:
        rm.toHdf(f, 'test')

    with h5py.File('rm3d.h5', 'r') as f:
        rm2 = RectilinearMesh3D.fromHdf(f['test'])

    rm2.pyvista_mesh().save('rm3d_read.vtk')

    plt.show()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 1.378 seconds)


.. _sphx_glr_download_examples_Meshes_plot_rectilinear_mesh_3d.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_rectilinear_mesh_3d.ipynb <plot_rectilinear_mesh_3d.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_rectilinear_mesh_3d.py <plot_rectilinear_mesh_3d.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_rectilinear_mesh_3d.zip <plot_rectilinear_mesh_3d.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
