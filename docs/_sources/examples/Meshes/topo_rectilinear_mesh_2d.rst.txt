
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/Meshes/topo_rectilinear_mesh_2d.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_Meshes_topo_rectilinear_mesh_2d.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_Meshes_topo_rectilinear_mesh_2d.py:


Topo Rectilinear Mesh 2D
------------------------
The Topo version of the rectilinear mesh has the same functionality as the
:ref:`Rectilinear Mesh 2D` but the top surface of the mesh can undulate.

.. GENERATED FROM PYTHON SOURCE LINES 10-16

.. code-block:: default

    from geobipy import StatArray
    from geobipy import RectilinearMesh2D
    import matplotlib.pyplot as plt
    import numpy as np



.. GENERATED FROM PYTHON SOURCE LINES 17-18

Specify some cell centres in x and y

.. GENERATED FROM PYTHON SOURCE LINES 18-25

.. code-block:: default

    x = StatArray(np.arange(11.0), 'Easting', 'm')
    y = StatArray(np.arange(11.0), 'Depth', 'm')
    # Create a height profile for the mesh
    height = StatArray(np.asarray([5,4,3,2,1,1,1,2,3,4,5])*3.0, 'Height', 'm')
    # Instantiate the mesh
    rm = RectilinearMesh2D(xEdges=x, yEdges=y, heightEdges=height)


.. GENERATED FROM PYTHON SOURCE LINES 26-27

Plot only the grid lines of the mesh

.. GENERATED FROM PYTHON SOURCE LINES 27-30

.. code-block:: default

    plt.figure()
    _ = rm.plotGrid(linewidth=0.5)


.. GENERATED FROM PYTHON SOURCE LINES 31-32

Create some cell values

.. GENERATED FROM PYTHON SOURCE LINES 32-34

.. code-block:: default

    values = StatArray(np.random.random(rm.shape), 'Name', 'Units')


.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    plt.figure()
    _ = rm.pcolor(values, grid=True, linewidth=0.1, xAxis='x')


.. GENERATED FROM PYTHON SOURCE LINES 39-40

Mask the x axis cells by a distance

.. GENERATED FROM PYTHON SOURCE LINES 40-44

.. code-block:: default

    rm_masked, x_indices, z_indices, arr2 = rm.mask_cells(xAxis='x', x_distance=0.4, values=values)
    plt.figure()
    _ = rm_masked.pcolor(StatArray(arr2), grid=True)


.. GENERATED FROM PYTHON SOURCE LINES 45-46

Mask the z axis cells by a distance

.. GENERATED FROM PYTHON SOURCE LINES 46-50

.. code-block:: default

    rm_masked, x_indices, z_indices, arr2 = rm.mask_cells(xAxis='x', z_distance=0.4, values=values)
    plt.figure()
    _ = rm_masked.pcolor(StatArray(arr2), grid=True)


.. GENERATED FROM PYTHON SOURCE LINES 51-52

Mask axes by a distance

.. GENERATED FROM PYTHON SOURCE LINES 52-56

.. code-block:: default

    rm_masked, x_indices, z_indices, arr2 = rm.mask_cells(xAxis='x', x_distance=0.4, z_distance=0.4, values=values)
    plt.figure()
    _ = rm_masked.pcolor(StatArray(arr2), grid=True)


.. GENERATED FROM PYTHON SOURCE LINES 57-58

Compute the mean over an interval for the mesh.

.. GENERATED FROM PYTHON SOURCE LINES 58-60

.. code-block:: default

    rm.intervalStatistic(values, intervals=[6.8, 12.4], axis=0)


.. GENERATED FROM PYTHON SOURCE LINES 61-62

Compute the mean over multiple intervals for the mesh.

.. GENERATED FROM PYTHON SOURCE LINES 62-104

.. code-block:: default

    rm.intervalStatistic(values, intervals=[6.8, 12.4, 20.0, 40.0], axis=0)


    # ################################################################################
    # # We can apply the interval statistics to either axis
    # rm.intervalStatistic(values, intervals=[2.8, 4.2], axis=1)


    # ################################################################################
    # rm.intervalStatistic(values, intervals=[2.8, 4.2, 5.1, 8.4], axis=1)


    # ################################################################################
    # rm.ravelIndices([[3, 4], [5, 5]])


    # ################################################################################
    # rm.unravelIndex([35, 45])


    # ################################################################################
    # # 2D draped rectlinear mesh embedded in 3D
    # # ++++++++++++++++++++++++++++++++++++++
    # z = StatArray(np.cumsum(np.arange(10.0)), 'Depth', 'm')
    # rm = RectilinearMesh2D(xCentres=x, yCentres=y, zCentres=z, heightCentres=height)
    # values = StatArray(np.arange(rm.nCells, dtype=np.float64).reshape(rm.shape), 'Name', 'Units')


    # ################################################################################
    # plt.figure()
    # rm.plotGrid(linewidth=1)

    # ################################################################################
    # # Plot the x-y co-ordinates
    # plt.figure()
    # rm.plotXY()

    # ################################################################################
    # # The pcolor function can now be plotted against distance
    # plt.figure()
    # rm.pcolor(values, grid=True, xAxis='r', linewidth=0.5)


.. GENERATED FROM PYTHON SOURCE LINES 105-118

.. code-block:: default

    import h5py
    with h5py.File('rm2d.h5', 'w') as f:
        rm.toHdf(f, 'test')

    with h5py.File('rm2d.h5', 'r') as f:
        rm2 = RectilinearMesh2D.fromHdf(f['test'])

    plt.figure()
    plt.subplot(121)
    rm.plotGrid(linewidth=0.5)
    plt.subplot(122)
    rm2.plotGrid(linewidth=0.5)


.. GENERATED FROM PYTHON SOURCE LINES 119-120

rm.toVTK('test', cellData=values)

.. GENERATED FROM PYTHON SOURCE LINES 120-121

.. code-block:: default


    plt.show()

.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)


.. _sphx_glr_download_examples_Meshes_topo_rectilinear_mesh_2d.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: topo_rectilinear_mesh_2d.py <topo_rectilinear_mesh_2d.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: topo_rectilinear_mesh_2d.ipynb <topo_rectilinear_mesh_2d.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
