
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/Inference_2D/plot_inference_2d_skytem.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_Inference_2D_plot_inference_2d_skytem.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_Inference_2D_plot_inference_2d_skytem.py:


2D Posterior analysis of Skytem inference
-----------------------------------------

All plotting in GeoBIPy can be carried out using the 3D inference class

.. GENERATED FROM PYTHON SOURCE LINES 8-152



.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /examples/Inference_2D/images/sphx_glr_plot_inference_2d_skytem_001.png
         :alt: skytem glacial, Best model, 5%, 50%, 95%, P(# of Layers), P(Interface)
         :srcset: /examples/Inference_2D/images/sphx_glr_plot_inference_2d_skytem_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /examples/Inference_2D/images/sphx_glr_plot_inference_2d_skytem_002.png
         :alt: skytem saline_clay, Best model, 5%, 50%, 95%, P(# of Layers), P(Interface)
         :srcset: /examples/Inference_2D/images/sphx_glr_plot_inference_2d_skytem_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /examples/Inference_2D/images/sphx_glr_plot_inference_2d_skytem_003.png
         :alt: skytem resistive_dolomites, Best model, 5%, 50%, 95%, P(# of Layers), P(Interface)
         :srcset: /examples/Inference_2D/images/sphx_glr_plot_inference_2d_skytem_003.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /examples/Inference_2D/images/sphx_glr_plot_inference_2d_skytem_004.png
         :alt: skytem resistive_basement, Best model, 5%, 50%, 95%, P(# of Layers), P(Interface)
         :srcset: /examples/Inference_2D/images/sphx_glr_plot_inference_2d_skytem_004.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /examples/Inference_2D/images/sphx_glr_plot_inference_2d_skytem_005.png
         :alt: skytem coastal_salt_water, Best model, 5%, 50%, 95%, P(# of Layers), P(Interface)
         :srcset: /examples/Inference_2D/images/sphx_glr_plot_inference_2d_skytem_005.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /examples/Inference_2D/images/sphx_glr_plot_inference_2d_skytem_006.png
         :alt: skytem ice_over_salt_water, Best model, 5%, 50%, 95%, P(# of Layers), P(Interface)
         :srcset: /examples/Inference_2D/images/sphx_glr_plot_inference_2d_skytem_006.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Model:
    mesh:
    |   RectilinearMesh2D: 
    |   Shape: : (79, 132) 
    |   x
    |   RectilinearMesh1D
    |   Number of Cells:
    |   |   79
    |   Cell Centres:
    |   |   Name: Easting (m) 0x16d1776d0
    |   |   Shape: (79,)
    |   |   Values: [ 0.  1.  2. ... 76. 77. 78.]
    |   |   Min: 0.0
    |   |   Max: 78.0
    |   |   has_posterior: False
    |   
    |   Cell Edges:
    |   |   Name: Easting (m) 0x16d174650
    |   |   Shape: (80,)
    |   |   Values: [-0.5  0.5  1.5 ... 76.5 77.5 78.5]
    |   |   Min: -0.5
    |   |   Max: 78.5
    |   |   has_posterior: False
    |   
    |   log:
    |   |   None
    |   relativeTo:
    |   |   Name:  0x16d336350
    |   |   Shape: (1,)
    |   |   Values: [0.]
    |   |   Min: 0.0
    |   |   Max: 0.0
    |   |   has_posterior: False
    |   
    |   y
    |   RectilinearMesh1D
    |   Number of Cells:
    |   |   132
    |   Cell Centres:
    |   |   Name: elevation (m) 0x16d1774d0
    |   |   Shape: (132,)
    |   |   Values: [  -2.2875   -6.8625  -11.4375 ... -592.4625 -597.0375 -601.6125]
    |   |   Min: -601.6125
    |   |   Max: -2.2875
    |   |   has_posterior: False
    |   
    |   Cell Edges:
    |   |   Name: elevation (m) 0x16d176850
    |   |   Shape: (133,)
    |   |   Values: [   0.      -4.575   -9.15  ... -594.75  -599.325 -603.9  ]
    |   |   Min: -603.9
    |   |   Max: 0.0
    |   |   has_posterior: False
    |   
    |   log:
    |   |   None
    |   relativeTo:
    |   |   Name: Elevation (m) 0x16d176bd0
    |   |   Shape: (79,)
    |   |   Values: [0. 0. 0. ... 0. 0. 0.]
    |   |   Min: 0.0
    |   |   Max: 0.0
    |   |   has_posterior: False
    |   
    values:
    |   Name: Mean Conductivity ($\frac{S}{m}$) 0x16d176ad0
    |   Shape: (79, 132)
    |   Values: [[0.01033856 0.01033856 0.01032608 ... 0.01558398 0.01558398 0.01558398]
    |    [0.01000897 0.01000897 0.00993591 ... 0.01545486 0.01545486 0.01545486]
    |    [0.00955219 0.00955219 0.0095664  ... 0.01290829 0.01290829 0.01290829]
    |    ...
    |    [0.06767155 0.06767155 0.08087337 ... 0.09781396 0.09781396 0.09781396]
    |    [0.08127294 0.08127294 0.09146854 ... 0.09884747 0.09884747 0.09884747]
    |    [0.09182078 0.09182078 0.09720053 ... 0.09911276 0.09911276 0.09911276]]
    |   Min: 0.008142645729506102
    |   Max: 0.18736281207027317
    |   has_posterior: False


    Model:
    mesh:
    |   RectilinearMesh2D: 
    |   Shape: : (79, 132) 
    |   x
    |   RectilinearMesh1D
    |   Number of Cells:
    |   |   79
    |   Cell Centres:
    |   |   Name: Easting (m) 0x16ba249d0
    |   |   Shape: (79,)
    |   |   Values: [ 0.  1.  2. ... 76. 77. 78.]
    |   |   Min: 0.0
    |   |   Max: 78.0
    |   |   has_posterior: False
    |   
    |   Cell Edges:
    |   |   Name: Easting (m) 0x16ba24ed0
    |   |   Shape: (80,)
    |   |   Values: [-0.5  0.5  1.5 ... 76.5 77.5 78.5]
    |   |   Min: -0.5
    |   |   Max: 78.5
    |   |   has_posterior: False
    |   
    |   log:
    |   |   None
    |   relativeTo:
    |   |   Name:  0x16a2943d0
    |   |   Shape: (1,)
    |   |   Values: [0.]
    |   |   Min: 0.0
    |   |   Max: 0.0
    |   |   has_posterior: False
    |   
    |   y
    |   RectilinearMesh1D
    |   Number of Cells:
    |   |   132
    |   Cell Centres:
    |   |   Name: elevation (m) 0x16ba272d0
    |   |   Shape: (132,)
    |   |   Values: [  -2.2875   -6.8625  -11.4375 ... -592.4625 -597.0375 -601.6125]
    |   |   Min: -601.6125
    |   |   Max: -2.2875
    |   |   has_posterior: False
    |   
    |   Cell Edges:
    |   |   Name: elevation (m) 0x16ba274d0
    |   |   Shape: (133,)
    |   |   Values: [   0.      -4.575   -9.15  ... -594.75  -599.325 -603.9  ]
    |   |   Min: -603.9
    |   |   Max: 0.0
    |   |   has_posterior: False
    |   
    |   log:
    |   |   None
    |   relativeTo:
    |   |   Name: Elevation (m) 0x16ba27350
    |   |   Shape: (79,)
    |   |   Values: [0. 0. 0. ... 0. 0. 0.]
    |   |   Min: 0.0
    |   |   Max: 0.0
    |   |   has_posterior: False
    |   
    values:
    |   Name: Mean Conductivity ($\frac{S}{m}$) 0x16ba27650
    |   Shape: (79, 132)
    |   Values: [[0.01004342 0.01004342 0.01004776 ... 0.01059402 0.01059402 0.01059402]
    |    [0.01216306 0.01216306 0.01200007 ... 0.01053094 0.01053094 0.01053094]
    |    [0.0096322  0.0096322  0.00961509 ... 0.01266093 0.01266093 0.01266093]
    |    ...
    |    [0.06790468 0.06790468 0.08216413 ... 0.09468115 0.09468115 0.09468115]
    |    [0.08066093 0.08066093 0.09027033 ... 0.09565939 0.09565939 0.09565939]
    |    [0.0918785  0.0918785  0.09698753 ... 0.10118202 0.10118202 0.10118202]]
    |   Min: 0.005722230815170164
    |   Max: 0.7350287210217844
    |   has_posterior: False


    Model:
    mesh:
    |   RectilinearMesh2D: 
    |   Shape: : (79, 132) 
    |   x
    |   RectilinearMesh1D
    |   Number of Cells:
    |   |   79
    |   Cell Centres:
    |   |   Name: Easting (m) 0x16b9002d0
    |   |   Shape: (79,)
    |   |   Values: [ 0.  1.  2. ... 76. 77. 78.]
    |   |   Min: 0.0
    |   |   Max: 78.0
    |   |   has_posterior: False
    |   
    |   Cell Edges:
    |   |   Name: Easting (m) 0x16b9ab550
    |   |   Shape: (80,)
    |   |   Values: [-0.5  0.5  1.5 ... 76.5 77.5 78.5]
    |   |   Min: -0.5
    |   |   Max: 78.5
    |   |   has_posterior: False
    |   
    |   log:
    |   |   None
    |   relativeTo:
    |   |   Name:  0x169562550
    |   |   Shape: (1,)
    |   |   Values: [0.]
    |   |   Min: 0.0
    |   |   Max: 0.0
    |   |   has_posterior: False
    |   
    |   y
    |   RectilinearMesh1D
    |   Number of Cells:
    |   |   132
    |   Cell Centres:
    |   |   Name: elevation (m) 0x16b9a9250
    |   |   Shape: (132,)
    |   |   Values: [  -2.2875   -6.8625  -11.4375 ... -592.4625 -597.0375 -601.6125]
    |   |   Min: -601.6125
    |   |   Max: -2.2875
    |   |   has_posterior: False
    |   
    |   Cell Edges:
    |   |   Name: elevation (m) 0x16b9ab350
    |   |   Shape: (133,)
    |   |   Values: [   0.      -4.575   -9.15  ... -594.75  -599.325 -603.9  ]
    |   |   Min: -603.9
    |   |   Max: 0.0
    |   |   has_posterior: False
    |   
    |   log:
    |   |   None
    |   relativeTo:
    |   |   Name: Elevation (m) 0x16b9ab250
    |   |   Shape: (79,)
    |   |   Values: [0. 0. 0. ... 0. 0. 0.]
    |   |   Min: 0.0
    |   |   Max: 0.0
    |   |   has_posterior: False
    |   
    values:
    |   Name: Mean Conductivity ($\frac{S}{m}$) 0x16b900dd0
    |   Shape: (79, 132)
    |   Values: [[0.02108286 0.02108286 0.02105478 ... 0.01970014 0.01970014 0.01970014]
    |    [0.02020133 0.02020133 0.02021404 ... 0.01697529 0.01697529 0.01697529]
    |    [0.01980096 0.01980096 0.01984157 ... 0.01531969 0.01531969 0.01531969]
    |    ...
    |    [0.00553428 0.00553428 0.00546494 ... 0.0027545  0.0027545  0.0027545 ]
    |    [0.00378312 0.00378312 0.00377909 ... 0.00262642 0.00262642 0.00262642]
    |    [0.00296382 0.00296382 0.0029272  ... 0.00213216 0.00213216 0.00213216]]
    |   Min: 0.0008988345212684541
    |   Max: 0.0391244257801508
    |   has_posterior: False


    Model:
    mesh:
    |   RectilinearMesh2D: 
    |   Shape: : (79, 132) 
    |   x
    |   RectilinearMesh1D
    |   Number of Cells:
    |   |   79
    |   Cell Centres:
    |   |   Name: Easting (m) 0x16d979bd0
    |   |   Shape: (79,)
    |   |   Values: [ 0.  1.  2. ... 76. 77. 78.]
    |   |   Min: 0.0
    |   |   Max: 78.0
    |   |   has_posterior: False
    |   
    |   Cell Edges:
    |   |   Name: Easting (m) 0x16d979850
    |   |   Shape: (80,)
    |   |   Values: [-0.5  0.5  1.5 ... 76.5 77.5 78.5]
    |   |   Min: -0.5
    |   |   Max: 78.5
    |   |   has_posterior: False
    |   
    |   log:
    |   |   None
    |   relativeTo:
    |   |   Name:  0x16b7868d0
    |   |   Shape: (1,)
    |   |   Values: [0.]
    |   |   Min: 0.0
    |   |   Max: 0.0
    |   |   has_posterior: False
    |   
    |   y
    |   RectilinearMesh1D
    |   Number of Cells:
    |   |   132
    |   Cell Centres:
    |   |   Name: elevation (m) 0x16d979a50
    |   |   Shape: (132,)
    |   |   Values: [  -2.2875   -6.8625  -11.4375 ... -592.4625 -597.0375 -601.6125]
    |   |   Min: -601.6125
    |   |   Max: -2.2875
    |   |   has_posterior: False
    |   
    |   Cell Edges:
    |   |   Name: elevation (m) 0x16d97a0d0
    |   |   Shape: (133,)
    |   |   Values: [   0.      -4.575   -9.15  ... -594.75  -599.325 -603.9  ]
    |   |   Min: -603.9
    |   |   Max: 0.0
    |   |   has_posterior: False
    |   
    |   log:
    |   |   None
    |   relativeTo:
    |   |   Name: Elevation (m) 0x16d979f50
    |   |   Shape: (79,)
    |   |   Values: [0. 0. 0. ... 0. 0. 0.]
    |   |   Min: 0.0
    |   |   Max: 0.0
    |   |   has_posterior: False
    |   
    values:
    |   Name: Mean Conductivity ($\frac{S}{m}$) 0x16d953cd0
    |   Shape: (79, 132)
    |   Values: [[0.01104549 0.01104549 0.01088691 ... 0.01524806 0.01524806 0.01524806]
    |    [0.01093171 0.01093171 0.01060605 ... 0.01539332 0.01539332 0.01539332]
    |    [0.01055781 0.01055781 0.01051885 ... 0.01532385 0.01532385 0.01532385]
    |    ...
    |    [0.06858216 0.06858216 0.07381497 ... 0.09939759 0.09939759 0.09939759]
    |    [0.0811231  0.0811231  0.09235    ... 0.09950496 0.09950496 0.09950496]
    |    [0.09142048 0.09142048 0.09655967 ... 0.09905984 0.09905984 0.09905984]]
    |   Min: 0.00249077338478267
    |   Max: 0.21372916933340144
    |   has_posterior: False


    Model:
    mesh:
    |   RectilinearMesh2D: 
    |   Shape: : (79, 132) 
    |   x
    |   RectilinearMesh1D
    |   Number of Cells:
    |   |   79
    |   Cell Centres:
    |   |   Name: Easting (m) 0x16d5f7650
    |   |   Shape: (79,)
    |   |   Values: [ 0.  1.  2. ... 76. 77. 78.]
    |   |   Min: 0.0
    |   |   Max: 78.0
    |   |   has_posterior: False
    |   
    |   Cell Edges:
    |   |   Name: Easting (m) 0x16d950150
    |   |   Shape: (80,)
    |   |   Values: [-0.5  0.5  1.5 ... 76.5 77.5 78.5]
    |   |   Min: -0.5
    |   |   Max: 78.5
    |   |   has_posterior: False
    |   
    |   log:
    |   |   None
    |   relativeTo:
    |   |   Name:  0x1695aa3d0
    |   |   Shape: (1,)
    |   |   Values: [0.]
    |   |   Min: 0.0
    |   |   Max: 0.0
    |   |   has_posterior: False
    |   
    |   y
    |   RectilinearMesh1D
    |   Number of Cells:
    |   |   132
    |   Cell Centres:
    |   |   Name: elevation (m) 0x16d951550
    |   |   Shape: (132,)
    |   |   Values: [  -2.2875   -6.8625  -11.4375 ... -592.4625 -597.0375 -601.6125]
    |   |   Min: -601.6125
    |   |   Max: -2.2875
    |   |   has_posterior: False
    |   
    |   Cell Edges:
    |   |   Name: elevation (m) 0x16d951f50
    |   |   Shape: (133,)
    |   |   Values: [   0.      -4.575   -9.15  ... -594.75  -599.325 -603.9  ]
    |   |   Min: -603.9
    |   |   Max: 0.0
    |   |   has_posterior: False
    |   
    |   log:
    |   |   None
    |   relativeTo:
    |   |   Name: Elevation (m) 0x16d9506d0
    |   |   Shape: (79,)
    |   |   Values: [0. 0. 0. ... 0. 0. 0.]
    |   |   Min: 0.0
    |   |   Max: 0.0
    |   |   has_posterior: False
    |   
    values:
    |   Name: Mean Conductivity ($\frac{S}{m}$) 0x16d5f70d0
    |   Shape: (79, 132)
    |   Values: [[1.02245403 1.02245403 1.02307401 ... 0.92933622 0.92933622 0.92933622]
    |    [1.02230576 1.02230576 1.02472151 ... 0.7725808  0.7725808  0.7725808 ]
    |    [1.02240853 1.02240853 1.02261644 ... 0.92778441 0.92778441 0.92778441]
    |    ...
    |    [0.17953964 0.17953964 0.17953964 ... 0.04600592 0.04600592 0.04600592]
    |    [0.14131043 0.14131043 0.14131043 ... 0.03121664 0.03121664 0.03121664]
    |    [0.0826337  0.0826337  0.0826337  ... 0.02682797 0.02682797 0.02682797]]
    |   Min: 0.005438953651048253
    |   Max: 4.1999468303264145
    |   has_posterior: False


    Model:
    mesh:
    |   RectilinearMesh2D: 
    |   Shape: : (79, 132) 
    |   x
    |   RectilinearMesh1D
    |   Number of Cells:
    |   |   79
    |   Cell Centres:
    |   |   Name: Easting (m) 0x16cd233d0
    |   |   Shape: (79,)
    |   |   Values: [ 0.  1.  2. ... 76. 77. 78.]
    |   |   Min: 0.0
    |   |   Max: 78.0
    |   |   has_posterior: False
    |   
    |   Cell Edges:
    |   |   Name: Easting (m) 0x16d470350
    |   |   Shape: (80,)
    |   |   Values: [-0.5  0.5  1.5 ... 76.5 77.5 78.5]
    |   |   Min: -0.5
    |   |   Max: 78.5
    |   |   has_posterior: False
    |   
    |   log:
    |   |   None
    |   relativeTo:
    |   |   Name:  0x16b9015d0
    |   |   Shape: (1,)
    |   |   Values: [0.]
    |   |   Min: 0.0
    |   |   Max: 0.0
    |   |   has_posterior: False
    |   
    |   y
    |   RectilinearMesh1D
    |   Number of Cells:
    |   |   132
    |   Cell Centres:
    |   |   Name: elevation (m) 0x16d470050
    |   |   Shape: (132,)
    |   |   Values: [  -2.2875   -6.8625  -11.4375 ... -592.4625 -597.0375 -601.6125]
    |   |   Min: -601.6125
    |   |   Max: -2.2875
    |   |   has_posterior: False
    |   
    |   Cell Edges:
    |   |   Name: elevation (m) 0x16d470c50
    |   |   Shape: (133,)
    |   |   Values: [   0.      -4.575   -9.15  ... -594.75  -599.325 -603.9  ]
    |   |   Min: -603.9
    |   |   Max: 0.0
    |   |   has_posterior: False
    |   
    |   log:
    |   |   None
    |   relativeTo:
    |   |   Name: Elevation (m) 0x16d4708d0
    |   |   Shape: (79,)
    |   |   Values: [0. 0. 0. ... 0. 0. 0.]
    |   |   Min: 0.0
    |   |   Max: 0.0
    |   |   has_posterior: False
    |   
    values:
    |   Name: Mean Conductivity ($\frac{S}{m}$) 0x16cd22e50
    |   Shape: (79, 132)
    |   Values: [[0.00045657 0.00045657 0.0004565  ... 0.00054201 0.00054201 0.00054201]
    |    [0.0004992  0.0004992  0.00049929 ... 0.0006536  0.0006536  0.0006536 ]
    |    [0.00061429 0.00061429 0.00061429 ... 0.00094599 0.00094599 0.00094599]
    |    ...
    |    [0.00828275 0.00828275 0.00829302 ... 0.00850303 0.00850303 0.00850303]
    |    [0.00901768 0.00901768 0.00902754 ... 0.00835599 0.00835599 0.00835599]
    |    [0.00925272 0.00925272 0.00930022 ... 0.00957266 0.00957266 0.00957266]]
    |   Min: 0.00039894971238615474
    |   Max: 1.1039260435132408
    |   has_posterior: False








|

.. code-block:: Python


    import argparse
    import matplotlib.pyplot as plt
    import numpy as np
    from geobipy import Model
    from geobipy import Inference2D

    def plot_2d_summary(folder, data_type, model_type):
       #%%
       # Inference for a line of inferences
       # ++++++++++++++++++++++++++++++++++
       #
       # We can instantiate the inference handler by providing a path to the directory containing
       # HDF5 files generated by GeoBIPy.
       #
       # The InfereceXD classes are low memory.  They only read information from the HDF5 files
       # as and when it is needed.
       #
       # The first time you use these classes to create plots, expect longer initial processing times.
       # I precompute expensive properties and store them in the HDF5 files for later use.

       from numpy.random import Generator
       from numpy.random import PCG64DXSM
       generator = PCG64DXSM(seed=0)
       prng = Generator(generator)

       #%%
       results_2d = Inference2D.fromHdf('{}/{}/{}/0.0.h5'.format(folder, data_type, model_type), prng=prng)

       kwargs = {
             "log" : 10,
             "cmap" : 'jet'
             }

       fig = plt.figure(figsize=(16, 8))
       plt.suptitle("{} {}".format(data_type, model_type))
       gs0 = fig.add_gridspec(6, 2, hspace=1.0)

       true_model = Model.create_synthetic_model(model_type)

       kwargs['vmin'] = np.log10(np.min(true_model.values))
       kwargs['vmax'] = np.log10(np.max(true_model.values))

       ax = fig.add_subplot(gs0[0, 0])
       true_model.pcolor(flipY=True, ax=ax, wrap_clabel=True, **kwargs)
       results_2d.plot_data_elevation(linewidth=0.3, ax=ax, xlabel=False, ylabel=False);
       results_2d.plot_elevation(linewidth=0.3, ax=ax, xlabel=False, ylabel=False);

       plt.ylim([-550, 60])

       print(results_2d.mean_parameters().summary)

       ax1 = fig.add_subplot(gs0[0, 1], sharex=ax, sharey=ax)
       results_2d.plot_mean_model(ax=ax1, wrap_clabel=True, **kwargs);
       results_2d.plot_data_elevation(linewidth=0.3, ax=ax1);
       results_2d.plot_elevation(linewidth=0.3, ax=ax1);

       # By adding the useVariance keyword, we can make regions of lower confidence more transparent
       ax1 = fig.add_subplot(gs0[1, 1], sharex=ax, sharey=ax)
       results_2d.plot_mode_model(ax=ax1, wrap_clabel=True, **kwargs);
       results_2d.plot_data_elevation(linewidth=0.3, ax=ax1);
       results_2d.plot_elevation(linewidth=0.3, ax=ax1);

       # # # # # We can also choose to keep parameters above the DOI opaque.
       # # # # results_2d.compute_doi()
       # # # # plt.subplot(313)
       # # # # results_2d.plot_mean_model(use_variance=True, mask_below_doi=True, **kwargs);
       # # # # results_2d.plot_data_elevation(linewidth=0.3);
       # # # # results_2d.plot_elevation(linewidth=0.3);

       ax1 = fig.add_subplot(gs0[2, 1], sharex=ax, sharey=ax)
       results_2d.plot_best_model(ax=ax1, wrap_clabel=True, **kwargs);
       results_2d.plot_data_elevation(linewidth=0.3, ax=ax1);
       results_2d.plot_elevation(linewidth=0.3, ax=ax1);
       ax1.set_title('Best model')

       del kwargs['vmin']
       del kwargs['vmax']

       ax1 = fig.add_subplot(gs0[3, 1], sharex=ax, sharey=ax); ax1.set_title('5%')
       results_2d.plot_percentile(ax=ax1, percent=0.05, wrap_clabel=True, **kwargs)
       results_2d.plot_data_elevation(linewidth=0.3, ax=ax1);
       results_2d.plot_elevation(linewidth=0.3, ax=ax1);

       ax1 = fig.add_subplot(gs0[4, 1], sharex=ax, sharey=ax); ax1.set_title('50%')
       results_2d.plot_percentile(ax=ax1, percent=0.5, wrap_clabel=True, **kwargs)
       results_2d.plot_data_elevation(linewidth=0.3, ax=ax1);
       results_2d.plot_elevation(linewidth=0.3, ax=ax1);

       ax1 = fig.add_subplot(gs0[5, 1], sharex=ax, sharey=ax); ax1.set_title('95%')
       results_2d.plot_percentile(ax=ax1, percent=0.95, wrap_clabel=True, **kwargs)
       results_2d.plot_data_elevation(linewidth=0.3, ax=ax1);
       results_2d.plot_elevation(linewidth=0.3, ax=ax1);

       #%%
       # We can plot the parameter values that produced the highest posterior
       ax1 = fig.add_subplot(gs0[2, 0], sharex=ax)
       results_2d.plot_k_layers(ax=ax1, wrap_ylabel=True)

       ax1 = fig.add_subplot(gs0[1, 0], sharex=ax)

       ll, bb, ww, hh = ax1.get_position().bounds
       ax1.set_position([ll, bb, ww*0.8, hh])

       results_2d.plot_channel_saturation(ax=ax1, wrap_ylabel=True)
       results_2d.plot_burned_in(ax=ax1, underlay=True)

       #%%
       # Now we can start plotting some more interesting posterior properties.
       # How about the confidence?
       ax1 = fig.add_subplot(gs0[3, 0], sharex=ax, sharey=ax)
       results_2d.plot_confidence(ax=ax1);
       results_2d.plot_data_elevation(ax=ax1, linewidth=0.3);
       results_2d.plot_elevation(ax=ax1, linewidth=0.3);

       #%%
       # We can take the interface depth posterior for each data point,
       # and display an interface probability cross section
       # This posterior can be washed out, so the clim_scaling keyword lets me saturate
       # the top and bottom 0.5% of the colour range
       ax1 = fig.add_subplot(gs0[4, 0], sharex=ax, sharey=ax)
       ax1.set_title('P(Interface)')
       results_2d.plot_interfaces(cmap='Greys', clim_scaling=0.5, ax=ax1);
       results_2d.plot_data_elevation(linewidth=0.3, ax=ax1);
       results_2d.plot_elevation(linewidth=0.3, ax=ax1);

       ax1 = fig.add_subplot(gs0[5, 0], sharex=ax, sharey=ax)
       results_2d.plot_entropy(cmap='Greys', clim_scaling=0.5, ax=ax1);
       results_2d.plot_data_elevation(linewidth=0.3, ax=ax1);
       results_2d.plot_elevation(linewidth=0.3, ax=ax1);

       # plt.show()
       plt.savefig('{}_{}.png'.format(data_type, model_type), dpi=300)


    if __name__ == '__main__':
       types = ['glacial', 'saline_clay', 'resistive_dolomites', 'resistive_basement', 'coastal_salt_water', 'ice_over_salt_water']

       for model in types:
          # try:
             plot_2d_summary('../../../Parallel_Inference/', "skytem", model)
          # except Exception as e:
          #    print(model)
          #    print(e)
          #    pass

.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 32.201 seconds)


.. _sphx_glr_download_examples_Inference_2D_plot_inference_2d_skytem.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_inference_2d_skytem.ipynb <plot_inference_2d_skytem.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_inference_2d_skytem.py <plot_inference_2d_skytem.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
